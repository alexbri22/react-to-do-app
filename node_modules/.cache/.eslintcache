[{"/home/alexbri/Desktop/to-do/src/index.js":"1","/home/alexbri/Desktop/to-do/src/App.jsx":"2","/home/alexbri/Desktop/to-do/src/components/Header.jsx":"3","/home/alexbri/Desktop/to-do/src/components/ToDoList.jsx":"4","/home/alexbri/Desktop/to-do/src/context/ToDoContext.jsx":"5","/home/alexbri/Desktop/to-do/src/components/HeaderBar.jsx":"6","/home/alexbri/Desktop/to-do/src/components/CreateToDo.jsx":"7","/home/alexbri/Desktop/to-do/src/components/GroupFilter.jsx":"8","/home/alexbri/Desktop/to-do/src/components/Task.jsx":"9"},{"size":145,"mtime":1641094021392,"results":"10","hashOfConfig":"11"},{"size":1290,"mtime":1641094021391,"results":"12","hashOfConfig":"11"},{"size":1141,"mtime":1641094021391,"results":"13","hashOfConfig":"11"},{"size":1072,"mtime":1641094021391,"results":"14","hashOfConfig":"11"},{"size":286,"mtime":1641094021391,"results":"15","hashOfConfig":"11"},{"size":458,"mtime":1641094021391,"results":"16","hashOfConfig":"11"},{"size":1169,"mtime":1641094021391,"results":"17","hashOfConfig":"11"},{"size":1433,"mtime":1641094021391,"results":"18","hashOfConfig":"11"},{"size":1720,"mtime":1641096431525,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vlhg5o",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/alexbri/Desktop/to-do/src/index.js",[],"/home/alexbri/Desktop/to-do/src/App.jsx",[],"/home/alexbri/Desktop/to-do/src/components/Header.jsx",["43","44","45","46","47","48"],"import {React, useContext} from \"react\";\nimport HeaderBar from './HeaderBar';\nimport CreateToDo from \"./CreateToDo\";\nimport DesktopLightBackground from '../images/bg-desktop-light.jpg';\nimport DesktopDarkBackground from '../images/bg-desktop-dark.jpg';\nimport MobileLightBackground from '../images/bg-mobile-light.jpg';\nimport MobileDarkBackground from '../images/bg-mobile-dark.jpg';\nimport ToDoContext from \"../context/ToDoContext\";\nfunction Header(){\n\n    const{toDoItems,setToDoItems,activeFilter,setActiveFilter,isLightTheme, setTheme} = useContext(ToDoContext);\n\n    function toggleTheme(){\n        setTheme(!isLightTheme);\n    }\n\n\n    const backgroundStyle = {\n        backgroundImage: `url(${isLightTheme ? DesktopLightBackground : DesktopDarkBackground})`,\n        webkitBackgroundSize: \"cover\",\n        mozBackgroundSize: \"cover\",\n        oBackgroundSize: \"cover\",\n        backgroundSize: \"cover\"\n    }\n    \n    return (\n        <div style={backgroundStyle} className=\"header\">\n            <HeaderBar isLightTheme={isLightTheme} toggleTheme={toggleTheme} />\n            <CreateToDo />\n        </div>\n    )\n}\n\nexport default Header;","/home/alexbri/Desktop/to-do/src/components/ToDoList.jsx",["49","50"],"import React, {useContext} from \"react\";\nimport Task from './Task';\nimport GroupFilter from './GroupFilter';\nimport ToDoContext from \"../context/ToDoContext\";\n\n\n\nfunction ToDoList(){\n\n    const {toDoItems, setToDoItems, activeFilter} = useContext(ToDoContext);\n\n    // Creates a to do item with the given data\n    function displayTask(task, id){\n        return (\n            <Task\n                title={task.title}\n                id={id}\n                isDone={task.isDone}\n                key={id}\n            />);\n    }\n\n    // Removes unnecesary tasks\n    const filteredTasks = toDoItems.filter((task) =>{\n        if (activeFilter === \"all\"){\n            return true;\n        }\n        const isValid = (activeFilter == \"active\" && !task.isDone) || (activeFilter === \"completed\" && task.isDone);\n        return isValid;\n    })\n\n    return (\n        <div className=\"to-do-list\">\n            <div className=\"list-items\">\n                {filteredTasks.map(displayTask)}\n                <GroupFilter />\n            </div>\n        </div>\n    )\n}\n\nexport default ToDoList;","/home/alexbri/Desktop/to-do/src/context/ToDoContext.jsx",["51"],"import { createContext, React } from \"react\";\n\nconst ToDoContext = createContext({\n        toDoItems: [],\n        setToDoItems: () => {},\n        activeFilter: \"\",\n        setActiveFilter: () => {},\n        isLightTheme: true,\n        setTheme: () => {}\n});\n\nexport default ToDoContext;","/home/alexbri/Desktop/to-do/src/components/HeaderBar.jsx",[],"/home/alexbri/Desktop/to-do/src/components/CreateToDo.jsx",["52","53","54"],"import React, { useContext } from \"react\";\nimport ToDoContext from \"../context/ToDoContext\";\n\nfunction CreateToDo(){\n\n    const {toDoItems,setToDoItems, activeFilter, setActiveFilter, isLightTheme, setTheme} = useContext(ToDoContext);\n\n    \n    // Clears the input area and adds the new to do element to the list\n     \n    function handleSubmit(event){\n        if (event.key === 'Enter'){\n            const taskTitle = event.target.value;\n            console.log(taskTitle);\n            setToDoItems([...toDoItems, {title:taskTitle, isFirst: false}]);\n            document.getElementById(\"create-to-do\").value = \"\";\n        }\n    }\n    \n    // Color changes\n    const themeStyle = {\n        backgroundColor: isLightTheme ? \"white\" : \"hsl(235, 24%, 19%)\",\n        color: isLightTheme ? \"black\" : \"white\"\n    }\n\n    return (\n        <div style={themeStyle} className=\"create-to-do\" >\n            <div className=\"create-to-do-circle\"></div>\n            <div className=\"create-to-do-input\"><input style={themeStyle} onKeyPress={handleSubmit} id=\"create-to-do\" placeholder=\"Create a new to do...\" type=\"text\"></input></div>\n        </div>\n    )\n}\n\nexport default CreateToDo;","/home/alexbri/Desktop/to-do/src/components/GroupFilter.jsx",["55"],"import React, { useContext } from \"react\";\nimport ToDoContext from \"../context/ToDoContext\";\n\nfunction GroupFilter(){\n\n    const {toDoItems, setToDoItems, activeFilter, setActiveFilter, isLightTheme, setTheme} = useContext(ToDoContext);\n    const itemCount = toDoItems.length;\n\n    // Handles item deletion\n    function removeCompleted(){\n        setToDoItems(toDoItems.filter(task => !task.isDone));\n    }\n\n\n\n    return (\n        <div>\n        <div style={{backgroundColor: isLightTheme ? \"white\" : \"hsl(235, 24%, 19%)\"}} className=\"filter-container\">\n            <div className=\"filter-left-items\">{itemCount} items left</div>\n            <div onClick={removeCompleted} className=\"filter-right-items pointer\">Clear completed</div>\n        </div>\n        <div style={{backgroundColor: isLightTheme ? \"white\" : \"hsl(235, 24%, 19%)\"}}  className=\"filter-groups\">\n                <div onClick={()=> setActiveFilter(\"all\")} className={\"pointer filter all\" + (activeFilter === \"all\" ? \" active-filter\" : \"\")}>All</div>\n                <div onClick={()=> setActiveFilter(\"active\")} className={\"pointer filter active\" + (activeFilter === \"active\" ? \" active-filter\" : \"\")}>Active</div>\n                <div onClick={()=> setActiveFilter(\"completed\")} className={\"pointer filter completed\" + (activeFilter === \"completed\" ? \" active-filter\" : \"\")}>Completed</div>\n        </div>\n        </div>\n        \n    );\n}\n\nexport default GroupFilter;","/home/alexbri/Desktop/to-do/src/components/Task.jsx",["56","57","58","59"],{"ruleId":"60","severity":1,"message":"61","line":6,"column":8,"nodeType":"62","messageId":"63","endLine":6,"endColumn":29},{"ruleId":"60","severity":1,"message":"64","line":7,"column":8,"nodeType":"62","messageId":"63","endLine":7,"endColumn":28},{"ruleId":"60","severity":1,"message":"65","line":11,"column":11,"nodeType":"62","messageId":"63","endLine":11,"endColumn":20},{"ruleId":"60","severity":1,"message":"66","line":11,"column":21,"nodeType":"62","messageId":"63","endLine":11,"endColumn":33},{"ruleId":"60","severity":1,"message":"67","line":11,"column":34,"nodeType":"62","messageId":"63","endLine":11,"endColumn":46},{"ruleId":"60","severity":1,"message":"68","line":11,"column":47,"nodeType":"62","messageId":"63","endLine":11,"endColumn":62},{"ruleId":"60","severity":1,"message":"66","line":10,"column":23,"nodeType":"62","messageId":"63","endLine":10,"endColumn":35},{"ruleId":"69","severity":1,"message":"70","line":28,"column":39,"nodeType":"71","messageId":"72","endLine":28,"endColumn":41},{"ruleId":"60","severity":1,"message":"73","line":1,"column":25,"nodeType":"62","messageId":"63","endLine":1,"endColumn":30},{"ruleId":"60","severity":1,"message":"67","line":6,"column":36,"nodeType":"62","messageId":"63","endLine":6,"endColumn":48},{"ruleId":"60","severity":1,"message":"68","line":6,"column":50,"nodeType":"62","messageId":"63","endLine":6,"endColumn":65},{"ruleId":"60","severity":1,"message":"74","line":6,"column":81,"nodeType":"62","messageId":"63","endLine":6,"endColumn":89},{"ruleId":"60","severity":1,"message":"74","line":6,"column":82,"nodeType":"62","messageId":"63","endLine":6,"endColumn":90},{"ruleId":"60","severity":1,"message":"75","line":7,"column":19,"nodeType":"62","messageId":"63","endLine":7,"endColumn":21},{"ruleId":"60","severity":1,"message":"67","line":8,"column":37,"nodeType":"62","messageId":"63","endLine":8,"endColumn":49},{"ruleId":"60","severity":1,"message":"68","line":8,"column":51,"nodeType":"62","messageId":"63","endLine":8,"endColumn":66},{"ruleId":"60","severity":1,"message":"74","line":8,"column":82,"nodeType":"62","messageId":"63","endLine":8,"endColumn":90},"no-unused-vars","'MobileLightBackground' is defined but never used.","Identifier","unusedVar","'MobileDarkBackground' is defined but never used.","'toDoItems' is assigned a value but never used.","'setToDoItems' is assigned a value but never used.","'activeFilter' is assigned a value but never used.","'setActiveFilter' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'React' is defined but never used.","'setTheme' is assigned a value but never used.","'id' is assigned a value but never used."]