{"ast":null,"code":"var _jsxFileName = \"/home/alexbri/Desktop/to-do/src/components/Header.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useContext } from \"react\";\nimport HeaderBar from './HeaderBar';\nimport CreateToDo from \"./CreateToDo\";\nimport DesktopLightBackground from '../images/bg-desktop-light.jpg';\nimport DesktopDarkBackground from '../images/bg-desktop-dark.jpg';\nimport MobileLightBackground from '../images/bg-mobile-light.jpg';\nimport MobileDarkBackground from '../images/bg-mobile-dark.jpg';\nimport ToDoContext from \"../context/ToDoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Header() {\n  _s();\n\n  const {\n    toDoItems,\n    setToDoItems,\n    activeFilter,\n    setActiveFilter,\n    isLightTheme,\n    setTheme\n  } = useContext(ToDoContext);\n\n  function toggleTheme() {\n    setTheme(!isLightTheme);\n  }\n\n  const backgroundStyle = {\n    backgroundImage: `url(${isLightTheme ? DesktopLightBackground : DesktopDarkBackground})`,\n    webkitBackgroundSize: \"cover\",\n    mozBackgroundSize: \"cover\",\n    oBackgroundSize: \"cover\",\n    backgroundSize: \"cover\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: backgroundStyle,\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderBar, {\n      isLightTheme: isLightTheme,\n      toggleTheme: toggleTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateToDo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"yKplZcYSUQPgobvDw/4bXb3PuMI=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/home/alexbri/Desktop/to-do/src/components/Header.jsx"],"names":["React","useContext","HeaderBar","CreateToDo","DesktopLightBackground","DesktopDarkBackground","MobileLightBackground","MobileDarkBackground","ToDoContext","Header","toDoItems","setToDoItems","activeFilter","setActiveFilter","isLightTheme","setTheme","toggleTheme","backgroundStyle","backgroundImage","webkitBackgroundSize","mozBackgroundSize","oBackgroundSize","backgroundSize"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,sBAAP,MAAmC,gCAAnC;AACA,OAAOC,qBAAP,MAAkC,+BAAlC;AACA,OAAOC,qBAAP,MAAkC,+BAAlC;AACA,OAAOC,oBAAP,MAAiC,8BAAjC;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;;AACA,SAASC,MAAT,GAAiB;AAAA;;AAEb,QAAK;AAACC,IAAAA,SAAD;AAAWC,IAAAA,YAAX;AAAwBC,IAAAA,YAAxB;AAAqCC,IAAAA,eAArC;AAAqDC,IAAAA,YAArD;AAAmEC,IAAAA;AAAnE,MAA+Ed,UAAU,CAACO,WAAD,CAA9F;;AAEA,WAASQ,WAAT,GAAsB;AAClBD,IAAAA,QAAQ,CAAC,CAACD,YAAF,CAAR;AACH;;AAGD,QAAMG,eAAe,GAAG;AACpBC,IAAAA,eAAe,EAAG,OAAMJ,YAAY,GAAGV,sBAAH,GAA4BC,qBAAsB,GADlE;AAEpBc,IAAAA,oBAAoB,EAAE,OAFF;AAGpBC,IAAAA,iBAAiB,EAAE,OAHC;AAIpBC,IAAAA,eAAe,EAAE,OAJG;AAKpBC,IAAAA,cAAc,EAAE;AALI,GAAxB;AAQA,sBACI;AAAK,IAAA,KAAK,EAAEL,eAAZ;AAA6B,IAAA,SAAS,EAAC,QAAvC;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,YAAY,EAAEH,YAAzB;AAAuC,MAAA,WAAW,EAAEE;AAApD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAvBQP,M;;KAAAA,M;AAyBT,eAAeA,MAAf","sourcesContent":["import {React, useContext} from \"react\";\nimport HeaderBar from './HeaderBar';\nimport CreateToDo from \"./CreateToDo\";\nimport DesktopLightBackground from '../images/bg-desktop-light.jpg';\nimport DesktopDarkBackground from '../images/bg-desktop-dark.jpg';\nimport MobileLightBackground from '../images/bg-mobile-light.jpg';\nimport MobileDarkBackground from '../images/bg-mobile-dark.jpg';\nimport ToDoContext from \"../context/ToDoContext\";\nfunction Header(){\n\n    const{toDoItems,setToDoItems,activeFilter,setActiveFilter,isLightTheme, setTheme} = useContext(ToDoContext);\n\n    function toggleTheme(){\n        setTheme(!isLightTheme);\n    }\n\n\n    const backgroundStyle = {\n        backgroundImage: `url(${isLightTheme ? DesktopLightBackground : DesktopDarkBackground})`,\n        webkitBackgroundSize: \"cover\",\n        mozBackgroundSize: \"cover\",\n        oBackgroundSize: \"cover\",\n        backgroundSize: \"cover\"\n    }\n    \n    return (\n        <div style={backgroundStyle} className=\"header\">\n            <HeaderBar isLightTheme={isLightTheme} toggleTheme={toggleTheme} />\n            <CreateToDo />\n        </div>\n    )\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}