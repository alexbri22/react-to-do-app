{"ast":null,"code":"var _jsxFileName = \"/home/alexbri/Desktop/to-do/src/components/Task.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport crossIcon from '../images/icon-cross.svg';\nimport checkIcon from '../images/icon-check.svg';\nimport ToDoContext from \"../context/ToDoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Task(props) {\n  _s();\n\n  const {\n    title,\n    id,\n    isDone\n  } = props;\n  const {\n    toDoItems,\n    setToDoItems,\n    activeFilter,\n    setActiveFilter,\n    isLightTheme,\n    setTheme\n  } = useContext(ToDoContext);\n  let isFirst = id == 0;\n\n  function removeTask() {\n    setToDoItems(toDoItems.filter(val => val.title !== title));\n  }\n\n  function toggleTask() {\n    const newTasks = [...toDoItems];\n    let toggledTaskIndex = newTasks.findIndex(task => task.title === title);\n    newTasks[toggledTaskIndex].isDone = !isDone;\n    setToDoItems(newTasks);\n  }\n\n  const themeStyle = {\n    backgroundColor: isLightTheme ? \"white\" : \"hsl(235, 24%, 19%)\",\n    color: isLightTheme ? \"black\" : \"white\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: ({\n      borderRadius: isFirst ? \"8px 8px 0 0\" : \"0\"\n    }, themeStyle),\n    className: \"task\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: toggleTask,\n      className: \"create-to-do-circle pointer\" + (isDone ? \" done-circle\" : \"\"),\n      children: isDone ? /*#__PURE__*/_jsxDEV(\"svg\", {\n        stroke: \"currentColor\",\n        fill: \"currentColor\",\n        style: {\n          backgroundImage: `url(${checkIcon})`\n        },\n        className: \"check-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 27\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-elements\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-title pointer\" + (isDone ? \" done-task-title\" : \"\"),\n        onClick: toggleTask,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: removeTask,\n        className: \"cross-icon pointer\",\n        style: {\n          backgroundImage: `url(${crossIcon})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Task, \"mXe1o0ZIYFfEOPoqlJMxYyxQncQ=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/home/alexbri/Desktop/to-do/src/components/Task.jsx"],"names":["React","useContext","crossIcon","checkIcon","ToDoContext","Task","props","title","id","isDone","toDoItems","setToDoItems","activeFilter","setActiveFilter","isLightTheme","setTheme","isFirst","removeTask","filter","val","toggleTask","newTasks","toggledTaskIndex","findIndex","task","themeStyle","backgroundColor","color","borderRadius","backgroundImage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAAA;;AAEhB,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,EAAR;AAAYC,IAAAA;AAAZ,MAAsBH,KAA5B;AACA,QAAM;AAACI,IAAAA,SAAD;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,YAA1B;AAAwCC,IAAAA,eAAxC;AAAyDC,IAAAA,YAAzD;AAAuEC,IAAAA;AAAvE,MAAmFd,UAAU,CAACG,WAAD,CAAnG;AAEA,MAAIY,OAAO,GAAGR,EAAE,IAAI,CAApB;;AAEA,WAASS,UAAT,GAAqB;AACjBN,IAAAA,YAAY,CAACD,SAAS,CAACQ,MAAV,CAAkBC,GAAD,IAAUA,GAAG,CAACZ,KAAJ,KAAcA,KAAzC,CAAD,CAAZ;AACH;;AAED,WAASa,UAAT,GAAqB;AAEjB,UAAMC,QAAQ,GAAG,CAAC,GAAGX,SAAJ,CAAjB;AAEA,QAAIY,gBAAgB,GAAGD,QAAQ,CAACE,SAAT,CAAmBC,IAAI,IAAIA,IAAI,CAACjB,KAAL,KAAeA,KAA1C,CAAvB;AACAc,IAAAA,QAAQ,CAACC,gBAAD,CAAR,CAA2Bb,MAA3B,GAAoC,CAACA,MAArC;AAEAE,IAAAA,YAAY,CAACU,QAAD,CAAZ;AACH;;AAED,QAAMI,UAAU,GAAG;AACfC,IAAAA,eAAe,EAAEZ,YAAY,GAAG,OAAH,GAAa,oBAD3B;AAEfa,IAAAA,KAAK,EAAEb,YAAY,GAAG,OAAH,GAAa;AAFjB,GAAnB;AAKA,sBAEI;AAAK,IAAA,KAAK,GAAE;AAACc,MAAAA,YAAY,EAAEZ,OAAO,GAAG,aAAH,GAAmB;AAAzC,OAA+CS,UAAjD,CAAV;AAAuE,IAAA,SAAS,EAAC,MAAjF;AAAA,4BACI;AAAK,MAAA,OAAO,EAAEL,UAAd;AAA0B,MAAA,SAAS,EAAE,iCAAiCX,MAAM,GAAG,cAAH,GAAoB,EAA3D,CAArC;AAAA,gBACKA,MAAM,gBAAG;AAAK,QAAA,MAAM,EAAC,cAAZ;AAA2B,QAAA,IAAI,EAAC,cAAhC;AAAgD,QAAA,KAAK,EAAE;AAACoB,UAAAA,eAAe,EAAE,OAAM1B,SAAU;AAAlC,SAAvD;AAA8F,QAAA,SAAS,EAAC;AAAxG;AAAA;AAAA;AAAA;AAAA,cAAH,GAAiI;AAD5I;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAE,wBAAwBM,MAAM,GAAG,kBAAH,GAAwB,EAAtD,CAAhB;AAA4E,QAAA,OAAO,EAAEW,UAArF;AAAA,kBAAkGb;AAAlG;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,OAAO,EAAEU,UAAd;AAA0B,QAAA,SAAS,EAAC,oBAApC;AAAyD,QAAA,KAAK,EAAE;AAACY,UAAAA,eAAe,EAAG,OAAM3B,SAAU;AAAnC;AAAhE;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAaH;;GAvCQG,I;;KAAAA,I;AAyCT,eAAeA,IAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport crossIcon from '../images/icon-cross.svg';\nimport checkIcon from '../images/icon-check.svg';\nimport ToDoContext from \"../context/ToDoContext\";\nfunction Task(props){\n\n    const {title, id, isDone} = props;\n    const {toDoItems, setToDoItems, activeFilter, setActiveFilter, isLightTheme, setTheme} = useContext(ToDoContext);\n\n    let isFirst = id == 0;\n\n    function removeTask(){\n        setToDoItems(toDoItems.filter((val) => (val.title !== title)));\n    }   \n\n    function toggleTask(){\n\n        const newTasks = [...toDoItems];\n\n        let toggledTaskIndex = newTasks.findIndex(task => task.title === title);\n        newTasks[toggledTaskIndex].isDone = !isDone;\n        \n        setToDoItems(newTasks);\n    }\n\n    const themeStyle = {\n        backgroundColor: isLightTheme ? \"white\" : \"hsl(235, 24%, 19%)\",\n        color: isLightTheme ? \"black\" : \"white\"\n    }\n\n    return (\n        \n        <div style={{borderRadius: isFirst ? \"8px 8px 0 0\" : \"0\"}, themeStyle} className=\"task\">\n            <div onClick={toggleTask} className={\"create-to-do-circle pointer\" + (isDone ? \" done-circle\" : \"\")}>\n                {isDone ? <svg stroke=\"currentColor\" fill=\"currentColor\"  style={{backgroundImage:`url(${checkIcon})`}} className=\"check-icon\"></svg> : null}\n            </div>\n            <div className=\"task-elements\">\n                <div className={\"task-title pointer\" + (isDone ? \" done-task-title\" : \"\") } onClick={toggleTask}>{title}</div>\n                <div onClick={removeTask} className=\"cross-icon pointer\" style={{backgroundImage: `url(${crossIcon})`}}></div>\n            </div>\n            \n        </div>\n    );\n}\n\nexport default Task;"]},"metadata":{},"sourceType":"module"}